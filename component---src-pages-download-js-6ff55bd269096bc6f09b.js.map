{"version":3,"sources":["webpack:///./src/pages/download.js","webpack:///./node_modules/node-fetch/browser.js"],"names":["DownloadPage","state","release","oses","currentOs","componentDidMount","this","setState","osKey","osName","releases","name","releaseUrl","getOS","getLatestRelease","Promise","resolve","fetch","then","data","json","os","platform","window","navigator","indexOf","test","render","title","className","map","eachOs","item","href","Component","global","self","Error","getGlobal","module","exports","default","bind","Headers","Request","Response"],"mappings":"sLAOMA,E,oJACFC,MAAQ,CACJC,QAAS,GACTC,KAAM,GACNC,UAAW,I,8CAGfC,kBAAA,WAIIC,KAAKC,SAAS,CACVL,QAHY,QAIZC,KAAM,CACJ,CACEK,MAAO,MACPC,OAAQ,QACRC,SAAU,CACR,CACEC,KAAM,eACNC,WAAW,8EAEb,CACED,KAAM,MACNC,WAAW,sFAIjB,CACEJ,MAAO,MACPC,OAAQ,UACRC,SAAU,CACR,CACEC,KAAM,oBACNC,WAAW,oFAEb,CACED,KAAM,oBACNC,WAAW,8EAEb,CACED,KAAM,yBACNC,WAAW,8EAEb,CACED,KAAM,yBACNC,WAAW,qFAIjB,CACEJ,MAAO,QACPC,OAAQ,QACRC,SAAU,CACR,CACEC,KAAM,+CACNC,WAAW,oFAEb,CACED,KAAM,+CACNC,WAAW,oFAEb,CACED,KAAM,gDACNC,WAAW,qFAEb,CACED,KAAM,iCACNC,WAAW,qFAEb,CACED,KAAM,4BACNC,WAAW,mFAEb,CACED,KAAM,2BACNC,WAAW,kFAEb,CACED,KAAM,mCACNC,WAAW,oFAKnBR,UAAWE,KAAKO,W,EAIxBC,iBAAA,WACI,OAAO,IAAIC,SAAQ,SAAAC,GACfC,IAAM,+DACLC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAC,GAAI,OAAIH,EAAQG,EAAKR,a,EAInCE,MAAA,WACI,IAGIQ,EAHEC,EAAWC,OAAOC,UAAUF,SAalC,OAR0C,IAJnB,CAAC,YAAa,WAAY,SAAU,UAIxCG,QAAQH,GACzBD,EAAK,OAC4C,IAL1B,CAAC,QAAS,QAAS,UAAW,SAK3BI,QAAQH,GAClCD,EAAK,OACKA,GAAM,QAAQK,KAAKJ,KAC7BD,EAAK,SAGAA,G,EAGXM,OAAA,WAAU,IAAD,EAKDrB,KAAKL,MAHLC,EAFC,EAEDA,QACAC,EAHC,EAGDA,KAIJ,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKyB,MAAM,aACX,yBAAKC,UAAW,aACZ,yBAAKA,UAAW,WACZ,yBAAKA,UAAW,SACZ,8CAAoB3B,IAItBC,EAAK2B,KAAI,SAAAC,GAAM,OAEb,8BAAUF,UAAW,YACnB,gCAASE,EAAOtB,QAChB,yBAAKoB,UAAW,mBAEVE,EAAOrB,SAASoB,KAAI,SAAAE,GAAI,OACtB,uBAAGC,KAAOD,EAAKpB,WAAagB,MAAM,kBAAlC,gBAAkEI,EAAKrB,cAQrF,wBAAIkB,UAAW,gBAAf,MAEA,0DACA,yBAAKA,UAAW,WAAhB,yBAIA,qDACA,yBAAKA,UAAW,WAAhB,+BAIA,mDACA,yBAAKA,UAAW,WAAhB,mBAIJ,6BACE,2BACE,2CACA,yHAA8F,uBAAGI,KAAK,6CAAR,UAEhG,2BACE,8CACA,4HAAiG,uBAAGA,KAAK,iDAAR,c,GA1K9FC,aAmLZlC,a,kCCxLf,IAmBImC,EAnBY,WAId,GAAoB,oBAATC,KACT,OAAOA,KAGT,GAAsB,oBAAXb,OACT,OAAOA,OAGT,QAAsB,IAAXY,EACT,OAAOA,EAGT,MAAM,IAAIE,MAAM,kCAGLC,GACbC,EAAOC,QAAUA,EAAUL,EAAOlB,MAE9BkB,EAAOlB,QACTuB,EAAQC,QAAUN,EAAOlB,MAAMyB,KAAKP,IAGtCK,EAAQG,QAAUR,EAAOQ,QACzBH,EAAQI,QAAUT,EAAOS,QACzBJ,EAAQK,SAAWV,EAAOU","file":"component---src-pages-download-js-6ff55bd269096bc6f09b.js","sourcesContent":["import React, { Component } from \"react\"\n\nimport fetch from 'node-fetch'\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nclass DownloadPage extends Component {\n    state = {\n        release: '',\n        oses: [],\n        currentOs: '',\n    }\n\n    componentDidMount() {\n        // const version = await this.getLatestRelease();\n        const version = '5.6.0';\n\n        this.setState({\n            release: version,\n            oses: [\n              {\n                osKey: 'mac',\n                osName: 'MacOS',\n                releases: [\n                  {\n                    name: 'Intel, 64bit',\n                    releaseUrl: `https://github.com/getferdi/ferdi/releases/download/v${version}/Ferdi-${version}.dmg`,\n                  },\n                  {\n                    name: 'ARM',\n                    releaseUrl: `https://github.com/getferdi/ferdi/releases/download/v${version}/Ferdi-${version}-arm64.dmg`,\n                  },\n                ]\n              },\n              {\n                osKey: 'win',\n                osName: 'Windows',\n                releases: [\n                  {\n                    name: 'Intel, 64bit, exe',\n                    releaseUrl: `https://github.com/getferdi/ferdi/releases/download/v${version}/Ferdi-Setup-${version}.exe`,\n                  },\n                  {\n                    name: 'Intel, 64bit, MSI',\n                    releaseUrl: `https://github.com/getferdi/ferdi/releases/download/v${version}/Ferdi-${version}.msi`,\n                  },\n                  {\n                    name: 'Intel, 64bit, Portable',\n                    releaseUrl: `https://github.com/getferdi/ferdi/releases/download/v${version}/Ferdi-${version}.exe`,\n                  },\n                  {\n                    name: 'Intel, 32bit, Portable',\n                    releaseUrl: `https://github.com/getferdi/ferdi/releases/download/v${version}/Ferdi-${version}-ia32.msi`,\n                  },\n                ]\n              },\n              {\n                osKey: 'linux',\n                osName: 'Linux',\n                releases: [\n                  {\n                    name: 'Intel, 64bit for Debian, Ubuntu, Mint (.deb)',\n                    releaseUrl: `https://github.com/getferdi/ferdi/releases/download/v${version}/ferdi_${version}_amd64.deb`,\n                  },\n                  {\n                    name: 'ARM64, 64bit for Debian, Ubuntu, Mint (.deb)',\n                    releaseUrl: `https://github.com/getferdi/ferdi/releases/download/v${version}/ferdi_${version}_arm64.deb`,\n                  },\n                  {\n                    name: 'ARMv7l, 64bit for Debian, Ubuntu, Mint (.deb)',\n                    releaseUrl: `https://github.com/getferdi/ferdi/releases/download/v${version}/ferdi_${version}_armv7l.deb`,\n                  },\n                  {\n                    name: 'Intel, 64bit for Fedora (.rpm)',\n                    releaseUrl: `https://github.com/getferdi/ferdi/releases/download/v${version}/ferdi-${version}.x86_64.rpm`,\n                  },\n                  {\n                    name: 'Intel, 64bit for AppImage',\n                    releaseUrl: `https://github.com/getferdi/ferdi/releases/download/v${version}/Ferdi-${version}.AppImage`,\n                  },\n                  {\n                    name: 'Intel, 64bit for freebsd',\n                    releaseUrl: `https://github.com/getferdi/ferdi/releases/download/v${version}/ferdi-${version}.freebsd`,\n                  },\n                  {\n                    name: 'Intel, 64bit for Other (.tar.gz)',\n                    releaseUrl: `https://github.com/getferdi/ferdi/releases/download/v${version}/ferdi-${version}.tar.gz`,\n                  },\n                ]\n              },\n            ],\n            currentOs: this.getOS(),\n        });\n    }\n\n    getLatestRelease() {\n        return new Promise(resolve => {\n            fetch('https://api.github.com/repos/getferdi/ferdi/releases/latest')\n            .then(data => data.json())\n            .then(data => resolve(data.name))\n        })\n    }\n\n    getOS() {\n        const platform = window.navigator.platform;\n        const macosPlatforms = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'];\n        const windowsPlatforms = ['Win32', 'Win64', 'Windows', 'WinCE'];\n        let os;\n\n        if (macosPlatforms.indexOf(platform) !== -1) {\n          os = 'mac';\n        } else if (windowsPlatforms.indexOf(platform) !== -1) {\n          os = 'win';\n        } else if (!os && /Linux/.test(platform)) {\n          os = 'linux';\n        }\n\n        return os;\n    }\n\n    render() {\n        const {\n            release,\n            oses,\n            // currentOs,\n        } = this.state;\n\n        return (\n            <Layout>\n                <SEO title=\"Download\"/>\n                <div className={\"container\"}>\n                    <div className={\"content\"}>\n                        <div className={\"title\"}>\n                            <h1>Download Ferdi {release}</h1>\n                        </div>\n\n                        {\n                          oses.map(eachOs => (\n                            // TODO: Need to highlight the fieldset pertaining to the current OS\n                            <fieldset className={\"os-group\"}>\n                              <legend>{eachOs.osName}</legend>\n                              <div className={\"download-button\"}>\n                                  {\n                                    eachOs.releases.map(item => (\n                                      <a href={ item.releaseUrl } title=\"Download Ferdi\">Download for { item.name }</a>\n                                    ))\n                                  }\n                              </div>\n                            </fieldset>\n                          ))\n                        }\n\n                        <h2 className={\"download-all\"}>or</h2>\n\n                        <h4>Install Chocolatey package</h4>\n                        <pre className={\"command\"}>\n                            $ choco install ferdi\n                        </pre>\n\n                        <h4>Install with Homebrew</h4>\n                        <pre className={\"command\"}>\n                            $ brew install --cask ferdi\n                        </pre>\n\n                        <h4>Install AUR package</h4>\n                        <pre className={\"command\"}>\n                            $ yay -S ferdi\n                        </pre>\n                    </div>\n                    <div>\n                      <p>\n                        <h2>Beta builds</h2>\n                        <span>For those of you would like to help Ferdi by testing the beta builds, you can find them <a href='http://github.com/getferdi/ferdi/releases'>here</a></span>\n                      </p>\n                      <p>\n                        <h2>Nightly builds</h2>\n                        <span>For those of you would like to help Ferdi by testing the nightly builds, you can find them <a href='http://github.com/getferdi/nightlies/releases'>here</a></span>\n                      </p>\n                    </div>\n                </div>\n            </Layout>\n        );\n    }\n}\n\nexport default DownloadPage\n","\"use strict\"; // ref: https://github.com/tc39/proposal-global\n\nvar getGlobal = function getGlobal() {\n  // the only reliable means to get the global object is\n  // `Function('return this')()`\n  // However, this causes CSP violations in Chrome apps.\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n\n  throw new Error('unable to locate global object');\n};\n\nvar global = getGlobal();\nmodule.exports = exports = global.fetch; // Needed for TypeScript and Webpack.\n\nif (global.fetch) {\n  exports.default = global.fetch.bind(global);\n}\n\nexports.Headers = global.Headers;\nexports.Request = global.Request;\nexports.Response = global.Response;"],"sourceRoot":""}