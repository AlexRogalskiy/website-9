{"version":3,"sources":["webpack://ferdi-website/./node_modules/node-fetch/browser.js","webpack://ferdi-website/./src/pages/download.js"],"names":["global","self","window","Error","getGlobal","module","exports","fetch","default","bind","Headers","Request","Response","DownloadPage","state","release","oses","currentOs","componentDidMount","version","this","setState","osKey","osName","releases","name","releaseUrl","getOS","getLatestRelease","Promise","resolve","then","data","json","os","platform","navigator","indexOf","test","render","title","className","map","eachOs","id","border","item","href","Component"],"mappings":"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","file":"component---src-pages-download-js-85522a481d46375325a4.js","sourcesContent":["\"use strict\"; // ref: https://github.com/tc39/proposal-global\n\nvar getGlobal = function getGlobal() {\n  // the only reliable means to get the global object is\n  // `Function('return this')()`\n  // However, this causes CSP violations in Chrome apps.\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n\n  throw new Error('unable to locate global object');\n};\n\nvar global = getGlobal();\nmodule.exports = exports = global.fetch; // Needed for TypeScript and Webpack.\n\nif (global.fetch) {\n  exports.default = global.fetch.bind(global);\n}\n\nexports.Headers = global.Headers;\nexports.Request = global.Request;\nexports.Response = global.Response;","import React, { Component } from 'react';\n\nimport fetch from 'node-fetch';\n\nimport Layout from '../components/layout';\nimport Seo from '../components/seo';\n\nclass DownloadPage extends Component {\n  state = {\n    release: '',\n    oses: [],\n    currentOs: '',\n  };\n\n  componentDidMount() {\n    // const version = await this.getLatestRelease();\n    const version = '5.6.0';\n\n    this.setState({\n      release: version,\n      oses: [\n        {\n          osKey: 'mac',\n          osName: 'MacOS',\n          releases: [\n            {\n              name: 'Intel, 64bit',\n              releaseUrl: `https://github.com/getferdi/ferdi/releases/download/v${version}/Ferdi-${version}.dmg`,\n            },\n            {\n              name: 'ARM',\n              releaseUrl: `https://github.com/getferdi/ferdi/releases/download/v${version}/Ferdi-${version}-arm64.dmg`,\n            },\n          ],\n        },\n        {\n          osKey: 'win',\n          osName: 'Windows',\n          releases: [\n            {\n              name: 'Intel, 64bit, exe',\n              releaseUrl: `https://github.com/getferdi/ferdi/releases/download/v${version}/Ferdi-Setup-${version}.exe`,\n            },\n            {\n              name: 'Intel, 64bit, MSI',\n              releaseUrl: `https://github.com/getferdi/ferdi/releases/download/v${version}/Ferdi-${version}.msi`,\n            },\n            {\n              name: 'Intel, 64bit, Portable',\n              releaseUrl: `https://github.com/getferdi/ferdi/releases/download/v${version}/Ferdi-${version}.exe`,\n            },\n            {\n              name: 'Intel, 32bit, Portable',\n              releaseUrl: `https://github.com/getferdi/ferdi/releases/download/v${version}/Ferdi-${version}-ia32.msi`,\n            },\n          ],\n        },\n        {\n          osKey: 'linux',\n          osName: 'Linux',\n          releases: [\n            {\n              name: 'Intel, 64bit for Debian, Ubuntu, Mint (.deb)',\n              releaseUrl: `https://github.com/getferdi/ferdi/releases/download/v${version}/ferdi_${version}_amd64.deb`,\n            },\n            {\n              name: 'ARM64, 64bit for Debian, Ubuntu, Mint (.deb)',\n              releaseUrl: `https://github.com/getferdi/ferdi/releases/download/v${version}/ferdi_${version}_arm64.deb`,\n            },\n            {\n              name: 'ARMv7l, 64bit for Debian, Ubuntu, Mint (.deb)',\n              releaseUrl: `https://github.com/getferdi/ferdi/releases/download/v${version}/ferdi_${version}_armv7l.deb`,\n            },\n            {\n              name: 'Intel, 64bit for Fedora (.rpm)',\n              releaseUrl: `https://github.com/getferdi/ferdi/releases/download/v${version}/ferdi-${version}.x86_64.rpm`,\n            },\n            {\n              name: 'Intel, 64bit for AppImage',\n              releaseUrl: `https://github.com/getferdi/ferdi/releases/download/v${version}/Ferdi-${version}.AppImage`,\n            },\n            {\n              name: 'Intel, 64bit for freebsd',\n              releaseUrl: `https://github.com/getferdi/ferdi/releases/download/v${version}/ferdi-${version}.freebsd`,\n            },\n            {\n              name: 'Intel, 64bit for Other (.tar.gz)',\n              releaseUrl: `https://github.com/getferdi/ferdi/releases/download/v${version}/ferdi-${version}.tar.gz`,\n            },\n          ],\n        },\n      ],\n      currentOs: this.getOS(),\n    });\n  }\n\n  getLatestRelease() {\n    return new Promise((resolve) => {\n      fetch('https://api.github.com/repos/getferdi/ferdi/releases/latest')\n        .then((data) => data.json())\n        .then((data) => resolve(data.name));\n    });\n  }\n\n  getOS() {\n    const platform = window.navigator.platform;\n    const macosPlatforms = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'];\n    const windowsPlatforms = ['Win32', 'Win64', 'Windows', 'WinCE'];\n    let os;\n\n    if (macosPlatforms.indexOf(platform) !== -1) {\n      os = 'mac';\n    } else if (windowsPlatforms.indexOf(platform) !== -1) {\n      os = 'win';\n    } else if (!os && /Linux/.test(platform)) {\n      os = 'linux';\n    }\n\n    return os;\n  }\n\n  render() {\n    const {\n      release,\n      oses,\n      currentOs,\n    } = this.state;\n\n    return (\n      <Layout>\n        <Seo title=\"Download\" />\n        <div className={'container'}>\n          <div className={'content'}>\n            <div className={'title'}>\n              <h1>Download Ferdi {release}</h1>\n            </div>\n\n            {oses.map((eachOs) => (\n              <fieldset id={eachOs.osKey} className={`os-group ${eachOs.osKey == currentOs ? 'currentOs' : ''}`} border='2px'>\n                <legend>{eachOs.osName}</legend>\n                <div className={'download-button'}>\n                  {eachOs.releases.map((item) => (\n                    <a href={item.releaseUrl} title=\"Download Ferdi\">\n                      {item.name}\n                    </a>\n                  ))}\n                </div>\n              </fieldset>\n            ))}\n\n            <h2 className={'download-all'}>or</h2>\n\n            <h4 id='choco'><a href='#choco'>Install Chocolatey package</a></h4>\n            <pre className={'command'}>$ choco install ferdi</pre>\n\n            <h4 id='brew'><a href='#brew'>Install with Homebrew</a></h4>\n            <pre className={'command'}>$ brew install --cask ferdi</pre>\n\n            <h4 id='yay'><a href='#yay'>Install AUR package</a></h4>\n            <pre className={'command'}>$ yay -S ferdi</pre>\n          </div>\n          <div>\n            <p>\n              <h2 id='beta-builds'><a href='#beta-builds'>Beta builds</a></h2>\n              <span>\n                For those of you would like to help Ferdi by testing the beta builds, you can find them{' '}\n                <a href=\"http://github.com/getferdi/ferdi/releases\">here</a>\n              </span>\n            </p>\n            <p>\n              <h2 id='nightly-builds'><a href='#nightly-builds'>Nightly builds</a></h2>\n              <span>\n                For those of you would like to help Ferdi by testing the nightly builds, you can find them{' '}\n                <a href=\"http://github.com/getferdi/nightlies/releases\">here</a>\n              </span>\n            </p>\n          </div>\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport default DownloadPage;\n"],"sourceRoot":""}