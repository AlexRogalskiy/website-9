{"version":3,"sources":["webpack://ferdi-website/./node_modules/node-fetch/browser.js","webpack://ferdi-website/./src/pages/services.js"],"names":["global","self","window","Error","getGlobal","module","exports","fetch","default","bind","Headers","Request","Response","ServicesPage","state","services","search","componentDidMount","then","data","json","sortedServices","sort","a","b","aName","name","toLowerCase","bName","setState","updateSearch","this","render","query","trim","shownServices","filter","e","includes","title","className","type","onChange","evt","target","value","placeholder","map","service","key","src","icons","svg","alt","length","style","textAlign","test","Component"],"mappings":"gHAEA,IAmBIA,EAnBY,WAId,GAAoB,oBAATC,KACT,OAAOA,KAGT,GAAsB,oBAAXC,OACT,OAAOA,OAGT,QAAsB,IAAXF,EACT,OAAOA,EAGT,MAAM,IAAIG,MAAM,kCAGLC,GACbC,EAAOC,QAAUA,EAAUN,EAAOO,MAE9BP,EAAOO,QACTD,EAAQE,QAAUR,EAAOO,MAAME,KAAKT,IAGtCM,EAAQI,QAAUV,EAAOU,QACzBJ,EAAQK,QAAUX,EAAOW,QACzBL,EAAQM,SAAWZ,EAAOY,U,uGCpBpBC,E,oJACJC,MAAQ,CACNC,SAAU,GACVC,OAAQ,I,0CAGVC,kBAAA,WAAqB,IAAD,OAElBV,IAAM,yDACHW,MAAK,SAACC,GAAD,OAAUA,EAAKC,UACpBF,MAAK,SAACH,GAEL,IAAMM,EAAiBN,EAASO,MAAK,SAACC,EAAGC,GACvC,IAAMC,EAAQF,EAAEG,KAAKC,cACfC,EAAQJ,EAAEE,KAAKC,cAErB,OAAOF,EAAQG,GAAS,EAAIH,EAAQG,EAAQ,EAAI,KAGlD,EAAKC,SAAS,CACZd,SAAUM,Q,EAKlBS,aAAA,SAAad,GACXe,KAAKF,SAAS,CACZb,Y,EAIJgB,OAAA,WAAU,IAAD,OACP,EAA6BD,KAAKjB,MAA1BC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,OAEZiB,EAAQjB,EAAOW,cAAcO,OAE7BC,EAAgBnB,EAASD,EAASqB,QAAO,SAACC,GAAD,OAAOA,EAAEX,KAAKC,cAAcW,SAASL,MAAUlB,EAE9F,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKwB,MAAM,aAEX,uBAAKC,UAAW,sBACd,uBAAKA,UAAW,WACd,uBAAKA,UAAW,SACd,sCACA,iFAGF,yBACEC,KAAK,OACLC,SAAU,SAACC,GAAD,OAAS,EAAKb,aAAaa,EAAIC,OAAOC,QAChDC,YAAY,SACZN,UAAW,eAGb,uBAAKA,UAAW,gBACbL,EAAcY,KAAI,SAACC,GAAD,OACjB,uBAAKR,UAAW,eAAgBS,IAAKD,EAAQC,KAC3C,uBAAKT,UAAW,QACd,uBAAKU,IAAKF,EAAQG,MAAMC,IAAKC,IAAQL,EAAQtB,KAAb,UAChC,yBAAIsB,EAAQtB,aAMlBS,EAAcmB,QACd,2BACE,qBAAGC,MAAO,CAAEC,UAAW,WAvED,kBAAkBC,KAwEnBxB,GACjB,kIAEE,2BACA,2BAHF,6GAQA,qHAGJ,uBAAKO,UAAW,6BACd,uBACEU,IAAI,0FACJG,IAAI,wBAEN,iD,GAvFSK,aAkG3B","file":"component---src-pages-services-js-3baafc8c9507df0b8f1d.js","sourcesContent":["\"use strict\"; // ref: https://github.com/tc39/proposal-global\n\nvar getGlobal = function getGlobal() {\n  // the only reliable means to get the global object is\n  // `Function('return this')()`\n  // However, this causes CSP violations in Chrome apps.\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n\n  throw new Error('unable to locate global object');\n};\n\nvar global = getGlobal();\nmodule.exports = exports = global.fetch; // Needed for TypeScript and Webpack.\n\nif (global.fetch) {\n  exports.default = global.fetch.bind(global);\n}\n\nexports.Headers = global.Headers;\nexports.Request = global.Request;\nexports.Response = global.Response;","import React, { Component } from 'react';\n\nimport fetch from 'node-fetch';\n\nimport Layout from '../components/layout';\nimport Seo from '../components/seo';\n\n// Test if the user is trying to search signal\nconst isSearchingSignal = (string) => /^sig(n(al?)?)?/i.test(string);\n\nclass ServicesPage extends Component {\n  state = {\n    services: [],\n    search: '',\n  };\n\n  componentDidMount() {\n    // Get list of services from GitHub\n    fetch('https://cdn.jsdelivr.net/gh/getferdi/recipes/all.json')\n      .then((data) => data.json())\n      .then((services) => {\n        // Sort services alphabetically\n        const sortedServices = services.sort((a, b) => {\n          const aName = a.name.toLowerCase();\n          const bName = b.name.toLowerCase();\n\n          return aName < bName ? -1 : aName > bName ? 1 : 0;\n        });\n\n        this.setState({\n          services: sortedServices,\n        });\n      });\n  }\n\n  updateSearch(search) {\n    this.setState({\n      search,\n    });\n  }\n\n  render() {\n    const { services, search } = this.state;\n\n    const query = search.toLowerCase().trim();\n\n    const shownServices = search ? services.filter((e) => e.name.toLowerCase().includes(query)) : services;\n\n    return (\n      <Layout>\n        <Seo title=\"Services\" />\n\n        <div className={'container services'}>\n          <div className={'targets'}>\n            <div className={'title'}>\n              <h2>Services</h2>\n              <p>Ferdi is compatible with all your favorite services</p>\n            </div>\n\n            <input\n              type=\"text\"\n              onChange={(evt) => this.updateSearch(evt.target.value)}\n              placeholder=\"Search\"\n              className={'search-box'}\n            />\n\n            <div className={'service-grid'}>\n              {shownServices.map((service) => (\n                <div className={'service-item'} key={service.key}>\n                  <div className={'item'}>\n                    <img src={service.icons.svg} alt={`${service.name} logo`} />\n                    <p>{service.name}</p>\n                  </div>\n                </div>\n              ))}\n            </div>\n\n            {!shownServices.length && (\n              <div>\n                <p style={{ textAlign: 'center' }}>\n                  {isSearchingSignal(query) ? (\n                    <>\n                      Ferdi unfortunately doesn't support Signal at the moment as Signal doesn't offer a web version.\n                      <br />\n                      <br />\n                      However, if you want to use another service than Signal you can add it using the \"Custom Website\"\n                      option!\n                    </>\n                  ) : (\n                    'It looks like this service is not yet part of Ferdi - but you can still add it using the \"Custom Website\" option!'\n                  )}\n                </p>\n                <div className={'service-not-found-service'}>\n                  <img\n                    src=\"https://cdn.jsdelivr.net/gh/getferdi/recipes/uncompressed/franz-custom-website/icon.svg\"\n                    alt=\"Custom website logo\"\n                  />\n                  <p>Custom Website</p>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport default ServicesPage;\n"],"sourceRoot":""}